`ZIP CODE`= factor(`ZIP CODE`),
`TAX CLASS AT TIME OF SALE` = factor(`TAX CLASS AT TIME OF SALE`),
`BUILDING CLASS AT TIME OF SALE`= factor(`BUILDING CLASS AT TIME OF SALE`),
`SALE DATE` = ymd(`SALE DATE`),
`BUILDING CATEGORY NUMBER` = str_extract(`BUILDING CLASS CATEGORY`,"^[0-9]{2}")
)
sales <- sales %>% rename(`APARTMENT NUMBER` = `APART
MENT
NUMBER`, `SALE PRICE` = `SALE
PRICE`)
sales1 <- distinct(sales)
sales1 <- sales1 %>%
mutate(`YEAR BUILT` = ifelse(`YEAR BUILT`>1500,`YEAR BUILT`, NA),
`GROSS SQUARE FEET`=ifelse(`GROSS SQUARE FEET`==0,NA,`GROSS SQUARE FEET` ),
`LAND SQUARE FEET`= ifelse(`LAND SQUARE FEET`==0, NA, `LAND SQUARE FEET`))
ggplot(sales1, aes(`LAND SQUARE FEET`, `SALE PRICE`))+
geom_point(aes(color= City), alpha = 0.5)+
coord_cartesian(ylim = c(0,200000000), xlim = c(0,200000))+
facet_wrap(~City)
ggplot(sales1, aes(`GROSS SQUARE FEET`, `SALE PRICE`))+
geom_point(aes(color= City), alpha = 0.5)+
coord_cartesian(ylim = c(0,200000000), xlim = c(0,500000))+
facet_wrap(~City)
Zero.Sale.Price <- sum(sales1$`SALE PRICE` == 0)
sales1 <- sales1 %>% mutate(`SALE PRICE`= ifelse(`SALE PRICE` == 0,NA,`SALE PRICE`))
ggplot(sales1, aes(`SALE PRICE`))+
geom_histogram(aes(group = `BUILDING CATEGORY NUMBER`, fill = `BUILDING CATEGORY NUMBER`), show.legend = TRUE, binwidth = 200000)+
coord_cartesian(xlim = c(0,5000000))+
facet_wrap(~City, ncol = 1)
ggplot(sales1, aes(`SALE PRICE`))+
geom_histogram(aes(group = `BUILDING CATEGORY NUMBER`, fill = `BUILDING CATEGORY NUMBER`, color = "black"), show.legend = TRUE, binwidth = 200000)+
coord_cartesian(xlim = c(0,5000000))+
facet_wrap(~City, ncol = 1)
ggplot(sales1, aes(`SALE PRICE`))+
geom_histogram(aes(group = `BUILDING CATEGORY NUMBER`, fill = `BUILDING CATEGORY NUMBER`, color = "white"), show.legend = TRUE, binwidth = 200000)+
coord_cartesian(xlim = c(0,5000000))+
facet_wrap(~City, ncol = 1)
ggplot(sales1, aes(`SALE PRICE`))+
geom_histogram(aes(group = `BUILDING CATEGORY NUMBER`, fill = `BUILDING CATEGORY NUMBER`, colour = "black"), show.legend = TRUE, binwidth = 200000)+
coord_cartesian(xlim = c(0,5000000))+
facet_wrap(~City, ncol = 1)
sales1 <- sales1 %>%
mutate(`BUILDING CATEGORY NUMBER` = as.numeric(`BUILDING CATEGORY NUMBER`))
pricebycategory <- sales1 %>%
filter(!is.na(`SALE PRICE`))%>%
group_by(City,`BUILDING CATEGORY NUMBER`) %>%
summarise(mean = mean(`SALE PRICE`, na.rm = TRUE),
median = median(`SALE PRICE`, na.rm = TRUE),
quantile1 = quantile(`SALE PRICE`, probs = 0.25, na.rm = TRUE),
quantile2 = quantile(`SALE PRICE`, probs = 0.75, na.rm = TRUE),
count = n()
)
View(pricebycategory)
ggplot(filter(pricebycategory, count>50))+
geom_point( aes(`BUILDING CATEGORY NUMBER`, `SALE PRICE`),alpha = 0.1, color = "black")+
geom_line(aes(mean, color = "blue"))+
geom_line(aes(median, color = "black") )+
coord_cartesian(ylim = c(0, 100000000))+
facet_wrap(~City, ncol = 1)
ggplot(filter(pricebycategory, count>50))+
geom_line(aes(mean, color = "blue"))+
geom_line(aes(median, color = "black") )+
coord_cartesian(ylim = c(0, 100000000))+
facet_wrap(~City, ncol = 1)
ggplot(filter(pricebycategory, count>50), aes(`BUILDING CATEGORY NUMBER`, count))+
geom_point(alpha = 0.1, aes(group = mean))+
coord_cartesian(ylim = c(0, 10000))+
facet_wrap(~City, ncol = 1)
ggplot(filter(pricebycategory, count>50), aes(`BUILDING CATEGORY NUMBER`, count))+
geom_point(aes(group = mean))+
coord_cartesian(ylim = c(0, 10000))+
facet_wrap(~City, ncol = 1)
ggplot(filter(pricebycategory, count>50), aes(`BUILDING CATEGORY NUMBER`, mean))+
geom_point(aes(group = count ))+
coord_cartesian(ylim = c(0, 10000))+
facet_wrap(~City, ncol = 1)
ggplot(filter(pricebycategory, count>50), aes(`BUILDING CATEGORY NUMBER`, mean))+
geom_point(aes(group = count ))+
coord_cartesian(ylim = c(0, 1000000000))+
facet_wrap(~City, ncol = 1)
ggplot(filter(pricebycategory, count>50), aes(`BUILDING CATEGORY NUMBER`, mean))+
geom_point(aes(group = count ))+
coord_cartesian(ylim = c(0, 10000000))+
facet_wrap(~City, ncol = 1)
ggplot(filter(pricebycategory, count>50), aes(`BUILDING CATEGORY NUMBER`, mean))+
geom_point(aes(groupby = count ))+
coord_cartesian(ylim = c(0, 10000000))+
facet_wrap(~City, ncol = 1)
ggplot(filter(pricebycategory, count>50), aes(`BUILDING CATEGORY NUMBER`, mean))+
geom_point(aes(color = count ))+
coord_cartesian(ylim = c(0, 10000000))+
facet_wrap(~City, ncol = 1)
ggplot(filter(pricebycategory, count>50), aes(`BUILDING CATEGORY NUMBER`, mean))+
geom_point(aes(color = count, size = count ))+
coord_cartesian(ylim = c(0, 10000000))+
facet_wrap(~City, ncol = 1)
ggplot(filter(pricebycategory, count>50), aes(`BUILDING CATEGORY NUMBER`, mean))+
geom_point(aes(color = count, size = count ))+
coord_cartesian(ylim = c(0, 100000000))+
facet_wrap(~City, ncol = 1)
ggplot(filter(pricebycategory, count>50), aes(`BUILDING CATEGORY NUMBER`, mean))+
geom_point(aes(color = count, size = count ))+
coord_cartesian(ylim = c(0, 1000000000))+
facet_wrap(~City, ncol = 1)
ggplot(filter(pricebycategory, count>50), aes(`BUILDING CATEGORY NUMBER`, mean))+
geom_point(aes(color = count, size = count ))+
coord_cartesian(ylim = c(0, 100000000))+
facet_wrap(~City, ncol = 1)
sales <- bind_rows(brooklyn,manhattan,.id = "City")
sales <- sales %>%
mutate(City = factor(City,labels = c("brooklyn","manhattan")),
NEIGHBORHOOD = factor(NEIGHBORHOOD),
`BUILDING CLASS CATEGORY` = factor(`BUILDING CLASS CATEGORY`),
`TAX CLASS AT PRESENT` = factor(`TAX CLASS AT PRESENT`),
BLOCK = factor(BLOCK),
LOT = factor(LOT),
`BUILDING CLASS AT PRESENT` = factor(`BUILDING CLASS AT PRESENT`),
`ZIP CODE`= factor(`ZIP CODE`),
`TAX CLASS AT TIME OF SALE` = factor(`TAX CLASS AT TIME OF SALE`),
`BUILDING CLASS AT TIME OF SALE`= factor(`BUILDING CLASS AT TIME OF SALE`),
`SALE DATE` = ymd(`SALE DATE`),
`BUILDING CATEGORY NUMBER` = str_extract(`BUILDING CLASS CATEGORY`,"^[0-9]{2}")
)
sales <- sales %>% rename(`APARTMENT NUMBER` = `APART
MENT
NUMBER`, `SALE PRICE` = `SALE
PRICE`)
sales1 <- distinct(sales)
sales1 <- sales1 %>%
mutate(`YEAR BUILT` = ifelse(`YEAR BUILT`>1500,`YEAR BUILT`, NA),
`GROSS SQUARE FEET`=ifelse(`GROSS SQUARE FEET`==0,NA,`GROSS SQUARE FEET` ),
`LAND SQUARE FEET`= ifelse(`LAND SQUARE FEET`==0, NA, `LAND SQUARE FEET`))
Zero.Sale.Price <- sum(sales1$`SALE PRICE` == 0)
sales1 <- sales1 %>% mutate(`SALE PRICE`= ifelse(`SALE PRICE` == 0,NA,`SALE PRICE`))
pricebycategory <- sales1 %>%
filter(!is.na(`SALE PRICE`))%>%
group_by(City,`BUILDING CATEGORY NUMBER`) %>%
summarise(mean = mean(`SALE PRICE`, na.rm = TRUE),
median = median(`SALE PRICE`, na.rm = TRUE),
quantile1 = quantile(`SALE PRICE`, probs = 0.25, na.rm = TRUE),
quantile2 = quantile(`SALE PRICE`, probs = 0.75, na.rm = TRUE),
count = n()
)
ggplot(filter(pricebycategory, count>50), aes(`BUILDING CATEGORY NUMBER`, mean))+
geom_point(aes(color = count, size = count ))+
coord_cartesian(ylim = c(0, 100000000))+
facet_wrap(~City, ncol = 1)
pricebycategory <- sales1 %>%
filter(!is.na(`SALE PRICE`) & !is.na(`BUILDING CATEGORY NUMBER`))%>%
group_by(City,`BUILDING CATEGORY NUMBER`) %>%
summarise(mean = mean(`SALE PRICE`, na.rm = TRUE),
median = median(`SALE PRICE`, na.rm = TRUE),
quantile1 = quantile(`SALE PRICE`, probs = 0.25, na.rm = TRUE),
quantile2 = quantile(`SALE PRICE`, probs = 0.75, na.rm = TRUE),
count = n()
)
ggplot(filter(pricebycategory, count>50), aes(`BUILDING CATEGORY NUMBER`, mean))+
geom_point(aes(color = count, size = count ))+
coord_cartesian(ylim = c(0, 100000000))+
facet_wrap(~City, ncol = 1)
View(sales1)
ggplot(filter(pricebycategory, count>40), aes(`BUILDING CATEGORY NUMBER`, mean))+
geom_point(aes(color = count, size = count ))+
coord_cartesian(ylim = c(0, 100000000))+
facet_wrap(~City, ncol = 1)
ggplot(filter(pricebycategory, count>40), aes(`BUILDING CATEGORY NUMBER`, mean))+
geom_point(aes(color = count, size = count ))+
coord_cartesian(ylim = c(0, 10000000))+
facet_wrap(~City, ncol = 1)
ggplot(filter(pricebycategory, count>40), aes(`BUILDING CATEGORY NUMBER`, mean))+
geom_point(aes(color = count, size = count ))+
coord_cartesian(ylim = c(0, 100000000))+
facet_wrap(~City, ncol = 1)
ggplot(filter(pricebycategory, count>40), aes(`BUILDING CATEGORY NUMBER`, mean))+
geom_point(aes(color = count, size = count ))+
coord_cartesian(ylim = c(0, 30000000))+
facet_wrap(~City, ncol = 1)
summary(sales1$`BUILDING CLASS CATEGORY`)
sales2 <- sales1 %>% group_by(City, NEIGHBORHOOD) %>%
summarise(Count = n()) %>% filter(Count>=500)
View(sales2)
sales3 <- sales1 %>% group_by(City, NEIGHBORHOOD) %>%
filter(n()>750 & City = "brooklyn") %>%
sales3 <- sales1 %>% group_by(City, NEIGHBORHOOD) %>%
filter(n()>750 & City == "brooklyn") %>%
group_by(`BUILDING CATEGORY NUMBER`) %>%
summarise(count = n())
View(sales3)
sales3 <- sales1 %>% group_by(City, NEIGHBORHOOD) %>%
filter(n()>750 & City == "brooklyn") %>%
group_by(NEIGHBORHOOD,`BUILDING CATEGORY NUMBER`) %>%
summarise(count = n())
sales_brooklyn <- sales1 %>% group_by(City, NEIGHBORHOOD) %>%
filter(n()>750 & City == "brooklyn") %>%
group_by(NEIGHBORHOOD,`BUILDING CATEGORY NUMBER`) %>%
summarise(count = n())
ggplot(filter(sales_brooklyn, count>50), aes(`BUILDING CATEGORY NUMBER`,count))+
geom_histogram()+
facet_wrap(~NEIGHBORHOOD, ncol = 3)
ggplot(filter(sales_brooklyn, count>50), aes(`BUILDING CATEGORY NUMBER`,count))+
geom_bar()+
facet_wrap(~NEIGHBORHOOD, ncol = 3)
ggplot(filter(sales_brooklyn, count>50), aes(`BUILDING CATEGORY NUMBER`))+
geom_bar()+
facet_wrap(~NEIGHBORHOOD, ncol = 3)
View(sales_brooklyn)
ggplot(filter(sales_brooklyn, count>50), aes(`BUILDING CATEGORY NUMBER`, count))+
geom_bar()+
facet_wrap(~NEIGHBORHOOD, ncol = 3)
ggplot(filter(sales_brooklyn, count>50))+
geom_bar(aes(`BUILDING CATEGORY NUMBER`, count))+
facet_wrap(~NEIGHBORHOOD, ncol = 3)
ggplot(filter(sales_brooklyn, count>50))+
geom_bar(aes(`BUILDING CATEGORY NUMBER`))+
facet_wrap(~NEIGHBORHOOD, ncol = 3)
ggplot(filter(pricebycategory, count>40), aes(`BUILDING CATEGORY NUMBER`, count))+
geom_point(aes(color = count, size = count ))+
coord_cartesian(ylim = c(0, 100000000))+
facet_wrap(~City, ncol = 1)
sales_brooklyn <- sales1 %>% group_by(City, NEIGHBORHOOD) %>%
filter(n()>750 & City == "brooklyn") %>%
group_by(NEIGHBORHOOD,`BUILDING CATEGORY NUMBER`) %>%
summarise(count = n())
ggplot(filter(sales_brooklyn, count>50))+
geom_bar(aes(`BUILDING CATEGORY NUMBER`, count))+
facet_wrap(~NEIGHBORHOOD, ncol = 3)
sales_brooklyn <- sales1 %>% group_by(City, NEIGHBORHOOD) %>%
filter(n()>750 & City == "brooklyn") %>%
group_by(NEIGHBORHOOD,`BUILDING CATEGORY NUMBER`) %>%
summarise(count1 = n())
ggplot(filter(sales_brooklyn, count>50))+
geom_bar(aes(`BUILDING CATEGORY NUMBER`, count1))+
facet_wrap(~NEIGHBORHOOD, ncol = 3)
ggplot(filter(sales_brooklyn, count>50), aes(`BUILDING CATEGORY NUMBER`, count))+
geom_point(aes(size = count))+
facet_wrap(~NEIGHBORHOOD, ncol = 3)
ggplot(filter(sales_brooklyn, count > 50), aes(`BUILDING CATEGORY NUMBER`, count))+
geom_point(aes(size = count))+
facet_wrap(~NEIGHBORHOOD, ncol = 3)
summary(sales_brooklyn)
sales_brooklyn <- sales1 %>% group_by(City, NEIGHBORHOOD) %>%
filter(n()>750 & City == "brooklyn") %>%
group_by(NEIGHBORHOOD,`BUILDING CATEGORY NUMBER`) %>%
summarise(count = n())
sales_brooklyn <- sales1 %>% group_by(City, NEIGHBORHOOD) %>%
filter(n()>750 & City == "brooklyn") %>%
group_by(NEIGHBORHOOD,`BUILDING CATEGORY NUMBER`) %>%
summarise(count = n())
ggplot(filter(sales_brooklyn, count > 50), aes(`BUILDING CATEGORY NUMBER`, count))+
geom_point(aes(size = count))+
facet_wrap(~NEIGHBORHOOD, ncol = 3)
sales_manhattan <- sales1 %>% group_by(City, NEIGHBORHOOD) %>%
filter(n()>1000 & City == "manhattan") %>%
group_by(NEIGHBORHOOD,`BUILDING CATEGORY NUMBER`) %>%
summarise(count = n())
View(sales_manhattan)
sales_manhattan <- sales1 %>% group_by(City, NEIGHBORHOOD) %>%
filter(n()>1000 & City == "manhattan") %>%
group_by(NEIGHBORHOOD,`BUILDING CATEGORY NUMBER`) %>%
summarise(count = n())
ggplot(filter(sales_manhattan, count > 200), aes(`BUILDING CATEGORY NUMBER`, count))+
geom_point(aes(size = count))+
facet_wrap(~NEIGHBORHOOD, ncol = 3)
ggplot(filter(sales1,!is.na(`BUILDING CATEGORY NUMBER`)), aes(`SALE PRICE`))+
geom_histogram(aes(group = `BUILDING CATEGORY NUMBER`, fill = `BUILDING CATEGORY NUMBER`, colour = "white"), show.legend = TRUE, binwidth = 200000)+
coord_cartesian(xlim = c(0,5000000))+
facet_wrap(~City, ncol = 1)
ggplot(sales1, aes(`SALE PRICE`))+
geom_histogram(aes(group = `BUILDING CATEGORY NUMBER`, fill = `BUILDING CATEGORY NUMBER`, colour = "white"), show.legend = TRUE, binwidth = 200000)+
coord_cartesian(xlim = c(0,5000000))+
facet_wrap(~City, ncol = 1)
ggplot(filter(sales1,!is.na(`BUILDING CATEGORY NUMBER`)), aes(`SALE PRICE`))+
geom_histogram(aes(group = `BUILDING CATEGORY NUMBER`, fill = `BUILDING CATEGORY NUMBER`, colour = "white"), show.legend = TRUE, binwidth = 200000)+
coord_cartesian(xlim = c(0,5000000))+
facet_wrap(~City, ncol = 1)
sum(is.na(sales1$`BUILDING CATEGORY NUMBER`))
sales2 <- sales1 %>%
filter(!is.na(`BUILDING CATEGORY NUMBER`)) %>%
group_by(City, NEIGHBORHOOD) %>%
summarise(Count = n()) %>% filter(Count>=500)
ggplot(filter(sales2, City == "manhattan"), aes(NEIGHBORHOOD))+
geom_col(aes(y = Count))+
coord_flip()+
ggtitle("Number of Units Sold in Manhattan")
ggplot(filter(sales2, City == "brooklyn"), aes(NEIGHBORHOOD))+
geom_col(aes(y = Count))+
coord_flip()+
ggtitle("Number of Units Sold in Brooklyn")
sales_manhattan <- sales1 %>%
filter(!is.na(`BUILDING CATEGORY NUMBER`)) %>%
group_by(City, NEIGHBORHOOD) %>%
filter(n()>1000 & City == "manhattan") %>%
group_by(NEIGHBORHOOD,`BUILDING CATEGORY NUMBER`) %>%
summarise(count = n())
ggplot(filter(sales_manhattan, count > 200), aes(`BUILDING CATEGORY NUMBER`, count))+
geom_point(aes(size = count))+
facet_wrap(~NEIGHBORHOOD, ncol = 3)
ggplot(filter(sales_manhattan, count > 100), aes(`BUILDING CATEGORY NUMBER`, count))+
geom_point(aes(size = count))+
facet_wrap(~NEIGHBORHOOD, ncol = 3)
ggplot(filter(pricebycategory, count>40), aes(`BUILDING CATEGORY NUMBER`, mean))+
geom_point(aes(color = count, size = count ))+
coord_cartesian(ylim = c(0, 100000000))+
facet_wrap(~City, ncol = 1)
knitr::opts_chunk$set(echo = TRUE)
ggplot(filter(sales1,!is.na(`BUILDING CATEGORY NUMBER`)), aes(`SALE PRICE`))+
geom_histogram(aes(group = `BUILDING CATEGORY NUMBER`, fill = `BUILDING CATEGORY NUMBER`, colour = "white"), show.legend = TRUE, binwidth = 200000)+
coord_cartesian(xlim = c(0,5000000))+
facet_wrap(~City, ncol = 1)
library(tidyverse)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringr)
ggplot(filter(sales1,!is.na(`BUILDING CATEGORY NUMBER`)), aes(`SALE PRICE`))+
geom_histogram(aes(group = `BUILDING CATEGORY NUMBER`, fill = `BUILDING CATEGORY NUMBER`, colour = "white"), show.legend = TRUE, binwidth = 200000)+
coord_cartesian(xlim = c(0,5000000))+
facet_wrap(~City, ncol = 1)
View(sales_brooklyn)
knitr::opts_chunk$set(echo = TRUE)
source("http://www.phaget4.org/R/myImagePlot.R")
myImagePlot(table(sales_brooklyn$NEIGHBORHOOD,sales_brooklyn$`BUILDING CATEGORY NUMBER`), title = "No. of Units by Category and Neighborhood in Brooklyn")
myImagePlot(table(sales_brooklyn$NEIGHBORHOOD,sales_brooklyn$`BUILDING CATEGORY NUMBER`), title = "Units by Category and Neighborhood in Brooklyn")
myImagePlot(table(sales1$NEIGHBORHOOD,sales1$`BUILDING CATEGORY NUMBER`), title = "Units by Category and Neighborhood in Brooklyn")
boxplot(sales1$`SALE PRICE`)
hist(sales1$`SALE PRICE`)
hist(sales1$`SALE PRICE`, xlim = c(0,200000))
hist(sales1$`SALE PRICE`, xlim = c(0,2000000))
hist(sales1$`SALE PRICE`, xlim = c(0,200000), ylim = c(0,1000))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringr)
brooklyn <- read_xls("rollingsales_brooklyn.xls", skip = 4, col_names = TRUE, trim_ws = TRUE)
manhattan <- read_xls("rollingsales_manhattan.xls", skip = 4, col_names = TRUE, trim_ws = TRUE)
sales <- bind_rows(brooklyn,manhattan,.id = "City")
sales <- sales %>%
mutate(City = factor(City,labels = c("brooklyn","manhattan")),
NEIGHBORHOOD = factor(NEIGHBORHOOD),
`BUILDING CLASS CATEGORY` = factor(`BUILDING CLASS CATEGORY`),
`TAX CLASS AT PRESENT` = factor(`TAX CLASS AT PRESENT`),
BLOCK = factor(BLOCK),
LOT = factor(LOT),
`BUILDING CLASS AT PRESENT` = factor(`BUILDING CLASS AT PRESENT`),
`ZIP CODE`= factor(`ZIP CODE`),
`TAX CLASS AT TIME OF SALE` = factor(`TAX CLASS AT TIME OF SALE`),
`BUILDING CLASS AT TIME OF SALE`= factor(`BUILDING CLASS AT TIME OF SALE`),
`SALE DATE` = ymd(`SALE DATE`),
`BUILDING CATEGORY NUMBER` = str_extract(`BUILDING CLASS CATEGORY`,"^[0-9]{2}")
)
sales <- sales %>% rename(`APARTMENT NUMBER` = `APART
MENT
NUMBER`, `SALE PRICE` = `SALE
PRICE`)
sales1 <- distinct(sales)
## Duplicate Entries
## There are around 1838 duplicate entries which have been removed using distinct ## function of dplyr. There are no missing values in our numeric variables. But we ## still need to look if there are any erreneous values and replace them with NA  ## or impute them.
sales1 <- sales1 %>%
mutate(`YEAR BUILT` = ifelse(`YEAR BUILT`>1500,`YEAR BUILT`, NA),
`GROSS SQUARE FEET`=ifelse(`GROSS SQUARE FEET`==0,NA,`GROSS SQUARE FEET` ),
`LAND SQUARE FEET`= ifelse(`LAND SQUARE FEET`==0, NA, `LAND SQUARE FEET`))
ggplot(sales1, aes(`LAND SQUARE FEET`, `SALE PRICE`))+
geom_point(aes(color= City), alpha = 0.5)+
coord_cartesian(ylim = c(0,200000000), xlim = c(0,200000))+
facet_wrap(~City)
ggplot(sales1, aes(`GROSS SQUARE FEET`, `SALE PRICE`))+
geom_point(aes(color= City), alpha = 0.5)+
coord_cartesian(ylim = c(0,200000000), xlim = c(0,500000))+
facet_wrap(~City)
## Even though we have more than 31000 missing values we plot this vizualization ## to get a basic idea on how the GROSS SQUARE FEET differs in each City compared ## to LAND SQUARE FEET.
## It appears that most of the units have SALE PRICE = 0. We look at the count and
## replace them with NA if the count is too large to impute values and then plot
## SALE PRICE by BUILDING CATEGORY.
Zero.Sale.Price <- sum(sales1$`SALE PRICE` == 0)
sales1 <- sales1 %>% mutate(`SALE PRICE`= ifelse(`SALE PRICE` == 0,NA,`SALE PRICE`))
## There are 15467 units with 0 values. So, we replace them with NA instead of
## imputing values since, that is a large number and the data will be more biased ## if values are imputed.
ggplot(sales1, aes(month(`SALE DATE`, label = TRUE, abbr = TRUE)))+
geom_bar(fill = "145777")+
labs(x = "Month of Sale", y = "Units Sold")+
facet_wrap(~City, ncol = 1)
ggplot(filter(sales1,!is.na(`BUILDING CATEGORY NUMBER`)), aes(`SALE PRICE`))+
geom_histogram(aes(group = `BUILDING CATEGORY NUMBER`, fill = `BUILDING CATEGORY NUMBER`, colour = "white"), show.legend = TRUE, binwidth = 200000)+
coord_cartesian(xlim = c(0,5000000))+
facet_wrap(~City, ncol = 1)
pricebycategory <- sales1 %>%
filter(!is.na(`SALE PRICE`) | !is.na(`BUILDING CATEGORY NUMBER`))%>%
group_by(City,`BUILDING CATEGORY NUMBER`) %>%
summarise(mean = mean(`SALE PRICE`, na.rm = TRUE),
median = median(`SALE PRICE`, na.rm = TRUE),
quantile1 = quantile(`SALE PRICE`, probs = 0.25, na.rm = TRUE),
quantile2 = quantile(`SALE PRICE`, probs = 0.75, na.rm = TRUE),
count = n()
)
ggplot(filter(pricebycategory, count>40), aes(`BUILDING CATEGORY NUMBER`, mean))+
geom_point(aes(color = count, size = count ))+
coord_cartesian(ylim = c(0, 100000000))+
facet_wrap(~City, ncol = 1)
sales2 <- sales1 %>%
filter(!is.na(`BUILDING CATEGORY NUMBER`)) %>%
group_by(City, NEIGHBORHOOD) %>%
summarise(Count = n()) %>% filter(Count>=500)
ggplot(filter(sales2, City == "manhattan"), aes(NEIGHBORHOOD))+
geom_col(aes(y = Count))+
coord_flip()+
ggtitle("Number of Units Sold in Manhattan")
ggplot(filter(sales2, City == "brooklyn"), aes(NEIGHBORHOOD))+
geom_col(aes(y = Count))+
coord_flip()+
ggtitle("Number of Units Sold in Brooklyn")
sales_brooklyn <- sales1 %>%
filter(!is.na(`BUILDING CATEGORY NUMBER`)) %>%
group_by(City, NEIGHBORHOOD) %>%
filter(n()>750 & City == "brooklyn") %>%
group_by(NEIGHBORHOOD,`BUILDING CATEGORY NUMBER`) %>%
summarise(count = n())
ggplot(filter(sales_brooklyn, count > 50), aes(`BUILDING CATEGORY NUMBER`, count))+
geom_point(aes(size = count))+
facet_wrap(~NEIGHBORHOOD, ncol = 3)
View(sales)
sales_manhattan <- sales1 %>%
filter(!is.na(`BUILDING CATEGORY NUMBER`)) %>%
group_by(City, NEIGHBORHOOD) %>%
filter(n()>1000 & City == "manhattan") %>%
group_by(NEIGHBORHOOD,`BUILDING CATEGORY NUMBER`) %>%
summarise(count = n())
ggplot(filter(sales_manhattan, count > 100), aes(`BUILDING CATEGORY NUMBER`, count))+
geom_point(aes(size = count))+
facet_wrap(~NEIGHBORHOOD, ncol = 3)
pricebycategory <- sales1 %>%
filter(!is.na(`SALE PRICE`) | !is.na(`BUILDING CATEGORY NUMBER`))%>%
group_by(City,`BUILDING CATEGORY NUMBER`) %>%
summarise(mean = mean(`SALE PRICE`, na.rm = TRUE),
median = median(`SALE PRICE`, na.rm = TRUE),
quantile1 = quantile(`SALE PRICE`, probs = 0.25, na.rm = TRUE),
quantile2 = quantile(`SALE PRICE`, probs = 0.75, na.rm = TRUE),
count = n()
)
ggplot(filter(pricebycategory, count>40), aes(`BUILDING CATEGORY NUMBER`, mean))+
geom_point(aes(color = count, size = count ))+
coord_cartesian(ylim = c(0, 100000000))+
facet_wrap(~City, ncol = 1)
pricebycategory <- sales1 %>%
filter(!is.na(`SALE PRICE`) & !is.na(`BUILDING CATEGORY NUMBER`))%>%
group_by(City,`BUILDING CATEGORY NUMBER`) %>%
summarise(mean = mean(`SALE PRICE`, na.rm = TRUE),
median = median(`SALE PRICE`, na.rm = TRUE),
quantile1 = quantile(`SALE PRICE`, probs = 0.25, na.rm = TRUE),
quantile2 = quantile(`SALE PRICE`, probs = 0.75, na.rm = TRUE),
count = n()
)
ggplot(filter(pricebycategory, count>40), aes(`BUILDING CATEGORY NUMBER`, mean))+
geom_point(aes(color = count, size = count ))+
coord_cartesian(ylim = c(0, 100000000))+
facet_wrap(~City, ncol = 1)
pricebycategory <- sales1 %>%
filter(!is.na(`SALE PRICE`) & !is.na(`BUILDING CATEGORY NUMBER`))%>%
group_by(City,`BUILDING CATEGORY NUMBER`) %>%
summarise(mean = mean(`SALE PRICE`, na.rm = TRUE),
median = median(`SALE PRICE`, na.rm = TRUE),
quantile1 = quantile(`SALE PRICE`, probs = 0.25, na.rm = TRUE),
quantile2 = quantile(`SALE PRICE`, probs = 0.75, na.rm = TRUE),
`units sold` = n()
)
ggplot(filter(pricebycategory, count>40), aes(`BUILDING CATEGORY NUMBER`, mean))+
geom_point(aes(color = count, size = count ))+
ylab("Avg. Sale Price")+
coord_cartesian(ylim = c(0, 100000000))+
facet_wrap(~City, ncol = 1)
pricebycategory <- sales1 %>%
filter(!is.na(`SALE PRICE`) & !is.na(`BUILDING CATEGORY NUMBER`))%>%
group_by(City,`BUILDING CATEGORY NUMBER`) %>%
summarise(mean = mean(`SALE PRICE`, na.rm = TRUE),
median = median(`SALE PRICE`, na.rm = TRUE),
quantile1 = quantile(`SALE PRICE`, probs = 0.25, na.rm = TRUE),
quantile2 = quantile(`SALE PRICE`, probs = 0.75, na.rm = TRUE),
`units` = n()
)
pricebycategory <- sales1 %>%
filter(!is.na(`SALE PRICE`) & !is.na(`BUILDING CATEGORY NUMBER`))%>%
group_by(City,`BUILDING CATEGORY NUMBER`) %>%
summarise(mean = mean(`SALE PRICE`, na.rm = TRUE),
median = median(`SALE PRICE`, na.rm = TRUE),
quantile1 = quantile(`SALE PRICE`, probs = 0.25, na.rm = TRUE),
quantile2 = quantile(`SALE PRICE`, probs = 0.75, na.rm = TRUE),
`units sold` = n()
)
ggplot(filter(pricebycategory, count>40), aes(`BUILDING CATEGORY NUMBER`, mean))+
geom_point(aes(color = count, size = count ))+
ylab("Avg. Sale Price")+
coord_cartesian(ylim = c(0, 100000000))+
facet_wrap(~City, ncol = 1)
ggplot(filter(pricebycategory, count>40), aes(`BUILDING CATEGORY NUMBER`, mean))+
geom_point(aes(color = `units sold`, size = `units sold` ))+
ylab("Avg. Sale Price")+
coord_cartesian(ylim = c(0, 100000000))+
facet_wrap(~City, ncol = 1)
View(pricebycategory)
ggplot(filter(pricebycategory, `units sold`>40), aes(`BUILDING CATEGORY NUMBER`, mean))+
geom_point(aes(color = `units sold`, size = `units sold` ))+
ylab("Avg. Sale Price")+
coord_cartesian(ylim = c(0, 100000000))+
facet_wrap(~City, ncol = 1)
sort(desc(sales1$`SALE PRICE`))
sort(sales1$`SALE PRICE`)
sum(is.na(sales$`SALE PRICE`))
summary(sales1$`SALE PRICE`)
ggplot(filter(sales_brooklyn, count > 50), aes(`BUILDING CATEGORY NUMBER`, count))+
geom_point(aes(size = count))+
ylab("Units sold")+
facet_wrap(~NEIGHBORHOOD, ncol = 3)
